<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
	mapper는 구문을 만들 수 있는 영역
	일반적으로 테이블당 1개씩의 mapper를 둔다
	
	- namespace : 영역을 외부에서 부르기 위한 별칭(일반적으로 테이블 이름으로 사용)
 -->
<mapper namespace="board">

<!--
    <insert id="regist" parameterType="com.kh.spring07.entity.StudentDto">
    
    </insert>
    
    또는
   
    <insert id="regist" parameterType="student">
		INSERT INTO student(
			name, age, score, when
		) VALUES(
			#{name}, #{age}, #{score}, sysdate
		)
	</insert>
	
	알아야 할 설정값
	- id : 구문을 외부에서 호출하기 위한 식별값
	- parameterType : 구문을 실행하기 위해 필요한 데이터 유형(매개변수와 유사)
	- resultType : 구문이 실행된 결과 유형(반환형과 유사)
-->
	
<!-- 	<insert id="insert" parameterType="com.kh.spring09.entity.MenuDto"> -->
	
	<insert id="insert" parameterType="boardDto">
	INSERT INTO DH_BOARD(BNO, TITLE, CONTENT, WRITER) 
	VALUES(DH_BOARD_SEQ.NEXTVAL,#{title},#{content},#{writer})
	</insert>

<!--게시글 목록조회-->
	<select id="list" resultType="boardDto">
	SELECT 
	BNO ,
	TITLE ,
	WRITER ,
	REGDATE
	FROM DH_BOARD
	ORDER BY BNO DESC 
	</select>	
	
<!--게시글 상세내용 조회-->	
	<select id="read" parameterType="int" resultType="boardDto">
	SELECT
		bno,
		TITLE,
		WRITER,
		CONTENT,
		regdate
	FROM DH_BOARD
	WHERE BNO = #{bno}
	</select>
	
<!--게시글 수정-->
	<update id="update" parameterType="boardDto">
	UPDATE DH_BOARD 
	SET TITLE = #{title},
		CONTENT = #{content}
	WHERE BNO = #{bno}
	</update>
	
<!--게시글 삭제-->	
	<delete id="delete" parameterType="int">
	DELETE 
	FROM DH_BOARD 
	WHERE BNO = #{bno}
	</delete>
	
	
</mapper>



